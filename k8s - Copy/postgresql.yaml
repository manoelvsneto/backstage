apiVersion: v1
kind: Service
metadata:
  name: backstage-postgresql
  namespace: backstage
  labels:
    app: backstage
    component: postgresql
spec:
  ports:
  - port: 5432
    targetPort: postgresql
    name: postgresql
  selector:
    app: backstage
    component: postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backstage-postgresql-data
  namespace: backstage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage-postgresql
  namespace: backstage
  labels:
    app: backstage
    component: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
      component: postgresql
  template:
    metadata:
      labels:
        app: backstage
        component: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:13
        ports:
        - containerPort: 5432
          name: postgresql
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: backstage-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backstage-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: backstage
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: backstage-postgresql-data
